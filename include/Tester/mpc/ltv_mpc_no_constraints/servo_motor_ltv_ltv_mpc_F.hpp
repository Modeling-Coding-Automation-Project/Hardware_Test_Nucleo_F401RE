#ifndef __SERVO_MOTOR_LTV_LTV_MPC_F_HPP__
#define __SERVO_MOTOR_LTV_LTV_MPC_F_HPP__

#include "python_numpy.hpp"

namespace servo_motor_ltv_ltv_mpc_F {

using namespace PythonNumpy;

using SparseAvailable_ltv_mpc_F = SparseAvailable<
    ColumnAvailable<true, true, false, false, true, false>,
    ColumnAvailable<true, true, true, true, false, true>,
    ColumnAvailable<true, true, true, false, true, false>,
    ColumnAvailable<true, true, true, true, false, true>,
    ColumnAvailable<true, true, true, true, true, false>,
    ColumnAvailable<true, true, true, true, false, true>,
    ColumnAvailable<true, true, true, true, true, false>,
    ColumnAvailable<true, true, true, true, false, true>,
    ColumnAvailable<true, true, true, true, true, false>,
    ColumnAvailable<true, true, true, true, false, true>,
    ColumnAvailable<true, true, true, true, true, false>,
    ColumnAvailable<true, true, true, true, false, true>,
    ColumnAvailable<true, true, true, true, true, false>,
    ColumnAvailable<true, true, true, true, false, true>,
    ColumnAvailable<true, true, true, true, true, false>,
    ColumnAvailable<true, true, true, true, false, true>,
    ColumnAvailable<true, true, true, true, true, false>,
    ColumnAvailable<true, true, true, true, false, true>,
    ColumnAvailable<true, true, true, true, true, false>,
    ColumnAvailable<true, true, true, true, false, true>,
    ColumnAvailable<true, true, true, true, true, false>,
    ColumnAvailable<true, true, true, true, false, true>,
    ColumnAvailable<true, true, true, true, true, false>,
    ColumnAvailable<true, true, true, true, false, true>,
    ColumnAvailable<true, true, true, true, true, false>,
    ColumnAvailable<true, true, true, true, false, true>,
    ColumnAvailable<true, true, true, true, true, false>,
    ColumnAvailable<true, true, true, true, false, true>,
    ColumnAvailable<true, true, true, true, true, false>,
    ColumnAvailable<true, true, true, true, false, true>,
    ColumnAvailable<true, true, true, true, true, false>,
    ColumnAvailable<true, true, true, true, false, true>,
    ColumnAvailable<true, true, true, true, true, false>,
    ColumnAvailable<true, true, true, true, false, true>,
    ColumnAvailable<true, true, true, true, true, false>,
    ColumnAvailable<true, true, true, true, false, true>,
    ColumnAvailable<true, true, true, true, true, false>,
    ColumnAvailable<true, true, true, true, false, true>,
    ColumnAvailable<true, true, true, true, true, false>,
    ColumnAvailable<true, true, true, true, false, true>
>;

using type = SparseMatrix_Type<double, SparseAvailable_ltv_mpc_F>;

inline auto make(void) -> type {

  return make_SparseMatrix<SparseAvailable_ltv_mpc_F>(
    static_cast<double>(1.0),
    static_cast<double>(0.05),
    static_cast<double>(1.0),
    static_cast<double>(6.400995031689201),
    static_cast<double>(0.3200497515844601),
    static_cast<double>(-0.3200497515844601),
    static_cast<double>(-0.016002487579223033),
    static_cast<double>(0.005),
    static_cast<double>(1.871980730795717),
    static_cast<double>(0.14750001233069035),
    static_cast<double>(0.006400963460214142),
    static_cast<double>(1.0),
    static_cast<double>(11.880107513752028),
    static_cast<double>(0.9441468461028448),
    static_cast<double>(-0.5940053756876016),
    static_cast<double>(-0.03984619407226533),
    static_cast<double>(0.005),
    static_cast<double>(2.4943238550717632),
    static_cast<double>(0.28372408462948123),
    static_cast<double>(0.025283807246411827),
    static_cast<double>(0.00032004817301070713),
    static_cast<double>(1.0),
    static_cast<double>(15.608667469960642),
    static_cast<double>(1.810994863909412),
    static_cast<double>(-0.7804333734980323),
    static_cast<double>(-0.06522739145901313),
    static_cast<double>(0.005),
    static_cast<double>(2.7699294824387004),
    static_cast<double>(0.44425414312187195),
    static_cast<double>(0.06150352587806497),
    static_cast<double>(0.001421013967095838),
    static_cast<double>(1.0),
    static_cast<double>(16.9552975127828),
    static_cast<double>(2.820928692412771),
    static_cast<double>(-0.8477648756391404),
    static_cast<double>(-0.0869855780690411),
    static_cast<double>(0.005),
    static_cast<double>(2.6415635709133034),
    static_cast<double>(0.6105380196469189),
    static_cast<double>(0.11792182145433483),
    static_cast<double>(0.0037714731377802096),
    static_cast<double>(1.0),
    static_cast<double>(15.576833697821932),
    static_cast<double>(3.847697580695696),
    static_cast<double>(-0.7788416848910971),
    static_cast<double>(-0.10101366461501021),
    static_cast<double>(0.005),
    static_cast<double>(2.1024921297978114),
    static_cast<double>(0.7620894477773434),
    static_cast<double>(0.19487539351010943),
    static_cast<double>(0.007744112910229045),
    static_cast<double>(1.0),
    static_cast<double>(11.47965211618273),
    static_cast<double>(4.754205087031816),
    static_cast<double>(-0.5739826058091371),
    static_cast<double>(-0.10444126748513291),
    static_cast<double>(0.005),
    static_cast<double>(1.2008194746060081),
    static_cast<double>(0.8791097698201468),
    static_cast<double>(0.2899590262696996),
    static_cast<double>(0.013538385001517704),
    static_cast<double>(1.0),
    static_cast<double>(5.039521895814333),
    static_cast<double>(5.4105283625264375),
    static_cast<double>(-0.2519760947907172),
    static_cast<double>(-0.09587783893739503),
    static_cast<double>(0.005),
    static_cast<double>(0.036618804083408785),
    static_cast<double>(0.9451954718600469),
    static_cast<double>(0.39816905979582956),
    static_cast<double>(0.02113175996422866),
    static_cast<double>(1.0),
    static_cast<double>(-3.0262343827774227),
    static_cast<double>(5.712029125086289),
    static_cast<double>(0.15131171913887054),
    static_cast<double>(-0.07558143339808247),
    static_cast<double>(0.005),
    static_cast<double>(-1.2481815766291247),
    static_cast<double>(0.9497668715694686),
    static_cast<double>(0.5124090788314563),
    static_cast<double>(0.030263015372263523),
    static_cast<double>(1.0),
    static_cast<double>(-11.734031616099811),
    static_cast<double>(5.595167109942811),
    static_cast<double>(0.5867015808049899),
    static_cast<double>(-0.04547180398733993),
    static_cast<double>(0.005),
    static_cast<double>(-2.4862373818425585),
    static_cast<double>(0.8898696833851628),
    static_cast<double>(0.6243118690921279),
    static_cast<double>(0.04044933147398194),
    static_cast<double>(1.0),
    static_cast<double>(-19.949885465629876),
    static_cast<double>(5.048758305070602),
    static_cast<double>(0.9974942732814932),
    static_cast<double>(-0.008948592492770108),
    static_cast<double>(0.005),
    static_cast<double>(-3.5057307431227525),
    static_cast<double>(0.771064549577927),
    static_cast<double>(0.7252865371561376),
    static_cast<double>(0.05103576587685755),
    static_cast<double>(1.0),
    static_cast<double>(-26.53293730211135),
    static_cast<double>(4.118877113213544),
    static_cast<double>(1.326646865105567),
    static_cast<double>(0.029487415763394274),
    static_cast<double>(0.005),
    static_cast<double>(-4.153273462232449),
    static_cast<double>(0.6072249750980571),
    static_cast<double>(0.8076636731116222),
    static_cast<double>(0.06127185213746709),
    static_cast<double>(1.0),
    static_cast<double>(-30.489106228140194),
    static_cast<double>(2.906337159803724),
    static_cast<double>(1.524455311407009),
    static_cast<double>(0.06477868940011851),
    static_cast<double>(0.005),
    static_cast<double>(-4.315802592210969),
    static_cast<double>(0.41920020298159444),
    static_cast<double>(0.8657901296105481),
    static_cast<double>(0.07040639120294),
    static_cast<double>(1.0),
    static_cast<double>(-31.114806312627977),
    static_cast<double>(1.5566154587338592),
    static_cast<double>(1.5557403156313978),
    static_cast<double>(0.09196183579718549),
    static_cast<double>(0.005),
    static_cast<double>(-3.938445704641599),
    static_cast<double>(0.23245016660252416),
    static_cast<double>(0.8969222852320796),
    static_cast<double>(0.07778863816996802),
    static_cast<double>(1.0),
    static_cast<double>(-28.11069949607994),
    static_cast<double>(0.24309450563309157),
    static_cast<double>(1.4055349748039956),
    static_cast<double>(0.10684582774296775),
    static_cast<double>(0.005),
    static_cast<double>(-3.035683027291144),
    static_cast<double>(0.07390543036573848),
    static_cast<double>(0.9017841513645568),
    static_cast<double>(0.08296254696488832),
    static_cast<double>(1.0),
    static_cast<double>(-21.64820047102578),
    static_cast<double>(-0.8545453829176383),
    static_cast<double>(1.0824100235512875),
    static_cast<double>(0.10662871675503094),
    static_cast<double>(0.005),
    static_cast<double>(-1.6938665600656093),
    static_cast<double>(-0.03157397429100614),
    static_cast<double>(0.88469332800328),
    static_cast<double>(0.08574085558102314),
    static_cast<double>(1.0),
    static_cast<double>(-12.37671004469203),
    static_cast<double>(-1.5741785964812753),
    static_cast<double>(0.6188355022345998),
    static_cast<double>(0.0903660848083065),
    static_cast<double>(0.005),
    static_cast<double>(-0.06419822718651069),
    static_cast<double>(-0.0646886113663143),
    static_cast<double>(0.853209911359325),
    static_cast<double>(0.08624768563486535),
    static_cast<double>(1.0),
    static_cast<double>(-1.3667782827405264),
    static_cast<double>(-1.7942558055215296),
    static_cast<double>(0.06833891413702448),
    static_cast<double>(0.059218669088577154),
    static_cast<double>(0.005),
    static_cast<double>(1.6535005551160626),
    static_cast<double>(-0.014664108110428828),
    static_cast<double>(0.8173249722441963),
    static_cast<double>(0.08492186152905028),
    static_cast<double>(1.0),
    static_cast<double>(10.007261495336063),
    static_cast<double>(-1.4528326202862742),
    static_cast<double>(-0.5003630747668052),
    static_cast<double>(0.016431605981031),
    static_cast<double>(0.005),
    static_cast<double>(3.2346307369219054),
    static_cast<double>(0.11874412143452423),
    static_cast<double>(0.7882684631539041),
    static_cast<double>(0.08247796076144447),
    static_cast<double>(1.0),
    static_cast<double>(20.23324656177636),
    static_cast<double>(-0.5597785212092805),
    static_cast<double>(-1.0116623280888202),
    static_cast<double>(-0.0329691543868581),
    static_cast<double>(0.005),
    static_cast<double>(4.458541041012721),
    static_cast<double>(0.32453848149283315),
    static_cast<double>(0.7770729479493632),
    static_cast<double>(0.079827623930803),
    static_cast<double>(1.0),
    static_cast<double>(27.85645494406561),
    static_cast<double>(0.7999223464753497),
    static_cast<double>(-1.3928227472032828),
    static_cast<double>(-0.08274048963322453),
    static_cast<double>(0.005)
  );

}

} // namespace servo_motor_ltv_ltv_mpc_F

#endif // __SERVO_MOTOR_LTV_LTV_MPC_F_HPP__
